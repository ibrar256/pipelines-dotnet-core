trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  webAppName: 'mydotnet'
  serviceConnection: 'myserviceconnection'

stages:
# -------------------
# Stage 1: Build
# -------------------
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build and Publish'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'  # or 6.x depending on your .NET version
      displayName: 'Install .NET SDK'

    - script: |
        dotnet restore
        dotnet build --configuration $(buildConfiguration)
        dotnet publish --configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)
      displayName: 'Build and Publish App'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
      displayName: 'Publish Build Artifacts'

# -------------------
# Stage 2: Deploy
# -------------------
- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployWebApp
    displayName: 'Deploy to Azure Web App'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App - $(webAppName)'
            inputs:
              azureSubscription: '$(serviceConnection)'
              appType: 'webApp'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop'
